name: "AlexNet-Teacher VGG16-Student"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "imagenet/imagenet_mean.binaryproto"
  }
  data_param {
    source: "imagenet/ilsvrc12_train_lmdb"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "data"
  top: "conv_st_1_1"
  name: "conv_st_1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_1_1"
  top: "conv_st_1_1"
  name: "relu_st_1_1"
  type: "ReLU"
}
layer {
  bottom: "conv_st_1_1"
  top: "conv_st_1_2"
  name: "conv_st_1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_1_2"
  top: "conv_st_1_2"
  name: "relu_st_1_2"
  type: "ReLU"
}
layer {
  bottom: "conv_st_1_2"
  top: "pool_st_1"
  name: "pool_st_1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool_st_1"
  top: "conv_st_2_1"
  name: "conv_st_2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_2_1"
  top: "conv_st_2_1"
  name: "relu_st_2_1"
  type: "ReLU"
}
layer {
  bottom: "conv_st_2_1"
  top: "conv_st_2_2"
  name: "conv_st_2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_2_2"
  top: "conv_st_2_2"
  name: "relu_st_2_2"
  type: "ReLU"
}
layer {
  bottom: "conv_st_2_2"
  top: "pool_st_2"
  name: "pool_st_2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool_st_2"
  top: "conv_st_3_1"
  name: "conv_st_3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_3_1"
  top: "conv_st_3_1"
  name: "relu_st_3_1"
  type: "ReLU"
}
layer {
  bottom: "conv_st_3_1"
  top: "conv_st_3_2"
  name: "conv_st_3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_3_2"
  top: "conv_st_3_2"
  name: "relu_st_3_2"
  type: "ReLU"
}
layer {
  bottom: "conv_st_3_2"
  top: "conv_st_3_3"
  name: "conv_st_3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_3_3"
  top: "conv_st_3_3"
  name: "relu_st_3_3"
  type: "ReLU"
}
layer {
  bottom: "conv_st_3_3"
  top: "pool_st_3"
  name: "pool_st_3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool_st_3"
  top: "conv_st_4_1"
  name: "conv_st_4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_4_1"
  top: "conv_st_4_1"
  name: "relu_st_4_1"
  type: "ReLU"
}
layer {
  bottom: "conv_st_4_1"
  top: "conv_st_4_2"
  name: "conv_st_4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_4_2"
  top: "conv_st_4_2"
  name: "relu_st_4_2"
  type: "ReLU"
}
layer {
  bottom: "conv_st_4_2"
  top: "conv_st_4_3"
  name: "conv_st_4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_4_3"
  top: "conv_st_4_3"
  name: "relu_st_4_3"
  type: "ReLU"
}
layer {
  bottom: "conv_st_4_3"
  top: "pool_st_4"
  name: "pool_st_4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool_st_4"
  top: "conv_st_5_1"
  name: "conv_st_5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_5_1"
  top: "conv_st_5_1"
  name: "relu_st_5_1"
  type: "ReLU"
}
layer {
  bottom: "conv_st_5_1"
  top: "conv_st_5_2"
  name: "conv_st_5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_5_2"
  top: "conv_st_5_2"
  name: "relu_st_5_2"
  type: "ReLU"
}
layer {
  bottom: "conv_st_5_2"
  top: "conv_st_5_3"
  name: "conv_st_5_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  bottom: "conv_st_5_3"
  top: "conv_st_5_3"
  name: "relu_st_5_3"
  type: "ReLU"
}
layer {
  bottom: "conv_st_5_3"
  top: "pool_st_5"
  name: "pool_st_5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool_st_5"
  top: "fc_st_6"
  name: "fc_st_6"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
      }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "fc_st_6"
  top: "fc_st_6"
  name: "relu_st_6"
  type: "ReLU"
}
layer {
  bottom: "fc_st_6"
  top: "fc_st_7"
  name: "fc_st_7"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
      }
    bias_filler {
      type: "constant"
      value: 0
    }
    }
}
layer {
  bottom: "fc_st_7"
  top: "fc_st_7"
  name: "relu_st_7"
  type: "ReLU"
}
layer {
  bottom: "fc_st_7"
  top: "fc_st_8"
  name: "fc_st_8"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "xavier"
      }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "fc_st_8"
  top: "prob"
  name: "prob"
  type: "Softmax"
}
layer {
  bottom: "fc8"
  top: "soft_label"
  name: "soft_label"
  type: "Softmax"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc_st_8"
  bottom: "label"
  top: "loss"
  loss_weight: 0.99
}
layer {
  bottom: "prob"
  bottom: "soft_label"
  top: "st_loss"
  name: "st_loss"
  type: "SigmoidCrossEntropyLoss"
  loss_weight: 0.01
}
layer {
  name: "accuracy/top1"
  type: "Accuracy"
  bottom: "fc_st_8"
  bottom: "label"
  top: "accuracy@1"
  accuracy_param {
    top_k: 1
  }
}
layer {
  name: "accuracy/top5"
  type: "Accuracy"
  bottom: "fc_st_8"
  bottom: "label"
  top: "accuracy@5"
  accuracy_param {
    top_k: 5
  }
}
